/// <reference types="node" />
import { HttpHeaders, IAsyncHTMLElement } from '../types';
import getFileExtension from './fs/file-extension';
declare const determineMediaTypeForScript: (element: IAsyncHTMLElement) => string | null;
declare const determineMediaTypeBasedOnFileExtension: (resource: string) => string | null;
declare const determineMediaTypeBasedOnFileName: (resource: string, rawContent: Buffer) => string | null;
declare const getContentTypeData: (element: IAsyncHTMLElement | null, resource: string, headers: HttpHeaders | null, rawContent: Buffer) => {
    charset: string | null;
    mediaType: string | null;
};
declare const isTextMediaType: (mediaType: string) => boolean;
declare const getType: (mediaType: string) => "font" | "html" | "script" | "image" | "unknown" | "manifest" | "json" | "xml" | "css" | "txt";
export { determineMediaTypeBasedOnFileExtension, determineMediaTypeBasedOnFileName, determineMediaTypeForScript, getContentTypeData, getFileExtension, getType, isTextMediaType };
//# sourceMappingURL=content-type.d.ts.map