import { IAsyncHTMLDocument, IAsyncHTMLElement, IAsyncWindow } from './async-html';
import { DOMWindow, JSDOM } from 'jsdom';
import { ProblemLocation } from './problems';
export declare class JSDOMAsyncHTMLDocument implements IAsyncHTMLDocument {
    private _document;
    private _dom;
    constructor(document: HTMLDocument, dom?: JSDOM);
    querySelectorAll(selector: string): Promise<JSDOMAsyncHTMLElement[]>;
    pageHTML(): Promise<string>;
}
export declare class JSDOMAsyncHTMLElement implements IAsyncHTMLElement {
    private _dom;
    protected _htmlelement: HTMLElement;
    private _ownerDocument;
    constructor(htmlelement: HTMLElement, dom?: JSDOM);
    getAttribute(name: string): string | null;
    getLocation(): ProblemLocation | null;
    isSame(element: JSDOMAsyncHTMLElement): boolean;
    outerHTML(): Promise<string>;
    readonly attributes: NamedNodeMap;
    readonly nodeName: string;
    readonly ownerDocument: IAsyncHTMLDocument;
}
export declare class JSDOMAsyncWindow implements IAsyncWindow {
    private _window;
    private _document;
    private _dom;
    constructor(window: DOMWindow, dom?: JSDOM);
    readonly document: IAsyncHTMLDocument;
    evaluate(source: string): Promise<any>;
}
//# sourceMappingURL=jsdom-async-html.d.ts.map