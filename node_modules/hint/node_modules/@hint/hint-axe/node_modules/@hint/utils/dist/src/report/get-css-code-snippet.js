"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const getCodeSnippetPrefix = (node) => {
    if (node.type === 'rule') {
        return `${node.selector} {`;
    }
    if (node.type === 'atrule') {
        return `@${node.name} ${node.params} {`;
    }
    return '';
};
const getCodeSnippetContent = (node, content) => {
    let numberOfSpaces = 4;
    const grandpa = node.parent ? node.parent.parent : null;
    if (grandpa && grandpa.type === 'atrule') {
        numberOfSpaces = 8;
    }
    return content.padStart(content.length + numberOfSpaces, ' ');
};
const getCodeSnippetPostfix = (node) => {
    let numberOfSpaces = 0;
    const grandpa = node.parent ? node.parent.parent : null;
    if (grandpa) {
        numberOfSpaces = 4;
    }
    return '}'.padStart(numberOfSpaces + 1, ' ');
};
exports.getCSSCodeSnippet = (node) => {
    let result = '';
    switch (node.type) {
        case 'rule':
            result = `${node.selector} { }`;
            break;
        case 'decl':
            result = `${node.prop}: ${node.value};`;
            break;
        case 'atrule':
            result = `@${node.name} ${node.params} { }`;
            break;
        case 'comment':
            result = `/* ${node.text} */`;
            break;
        default:
    }
    let parent = node.parent;
    let child = node;
    while (parent && parent.type !== 'root') {
        result = `${getCodeSnippetPrefix(parent)}
${getCodeSnippetContent(child, result)}
${getCodeSnippetPostfix(parent)}`;
        child = parent;
        parent = parent.parent;
    }
    return result;
};
